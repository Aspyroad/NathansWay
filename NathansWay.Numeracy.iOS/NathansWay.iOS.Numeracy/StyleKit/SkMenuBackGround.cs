//
//  SkMenuBackGround.cs
//  NathansWay.iOS.Numeracy.Graphics
//
//  Created by Brett Anthony on 14/10/2014.
//  Copyright (c) 2014 AspyRoad. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



using System;
using System.Drawing;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using MonoTouch.CoreGraphics;

namespace NathansWay.iOS.Numeracy.Graphics
{
    [Register ("SkMenuBackGround")]
    public class SkMenuBackGround : NSObject
    {

        //// Initialization

        static SkMenuBackGround()
        {
            var colorSpace = CGColorSpace.CreateDeviceRGB();

            // Colors Initialization
            ColorText1OuterShadowColor = UIColor.FromRGBA(0.302f, 0.300f, 0.119f, 1.000f);
            ColorMainBackGroundStart = UIColor.FromRGBA(0.626f, 0.465f, 0.179f, 0.796f);
            ColorMainBackGroundEnd = UIColor.FromRGBA(0.802f, 0.456f, 0.000f, 1.000f);

            // Gradients Initialization
            var gradientBackGroundColors = new CGColor [] {SkMenuBackGround.ColorMainBackGroundStart.CGColor, SkMenuBackGround.ColorMainBackGroundEnd.CGColor};
            var gradientBackGroundLocations = new float [] {0.0f, 1.0f};
            GradientBackGround = new CGGradient(colorSpace, gradientBackGroundColors, gradientBackGroundLocations);

            // Shadows Initialization
            ColorTextNumbersOuterShadow = new NSShadow { ShadowColor = SkMenuBackGround.ColorText1OuterShadowColor, ShadowOffset = new SizeF(-2.1f, 1.1f), ShadowBlurRadius = 5.0f };

        }

        //// Colors

        public static UIColor ColorText1OuterShadowColor { get; private set; }
        public static UIColor ColorMainBackGroundStart { get; private set; }
        public static UIColor ColorMainBackGroundEnd { get; private set; }

        //// Gradients

        public static CGGradient GradientBackGround { get; private set; }

        //// Shadows

        public static NSShadow ColorTextNumbersOuterShadow { get; private set; }

        //// Drawing Methods

        public static void DrawCanvasMain(RectangleF menuLogoFrame)
        {
            //// General Declarations
            var context = UIGraphics.GetCurrentContext();

            //// Color Declarations
            var colorTextNathansWay = UIColor.FromRGBA(1.000f, 0.761f, 0.409f, 0.263f);
            var colorTextOuterShadowColor = UIColor.FromRGBA(0.406f, 0.215f, 0.000f, 0.428f);

            //// Shadow Declarations
            var colorTextOuterShadow = new NSShadow { ShadowColor = colorTextOuterShadowColor, ShadowOffset = new SizeF(-38.1f, -11.1f), ShadowBlurRadius = 5.0f };

            //// Rectangle Drawing
            var rectanglePath = UIBezierPath.FromRect(menuLogoFrame);
            context.SaveState();
            rectanglePath.AddClip();
            context.DrawLinearGradient(SkMenuBackGround.GradientBackGround, new PointF(512.0f, -0.0f), new PointF(512.0f, 768.0f), 0);
            context.RestoreState();


            //// NathansWay
            {
            }


            //// textLogoNathansWay Drawing
            RectangleF textLogoNathansWayRect = new RectangleF(5.0f, 4.0f, 345.0f, 75.0f);
            {
                var textContent = "nathansway";
                context.SaveState();
                context.SetShadowWithColor(colorTextOuterShadow.ShadowOffset, colorTextOuterShadow.ShadowBlurRadius, colorTextOuterShadow.ShadowColor.CGColor);
                colorTextNathansWay.SetFill();
                var textLogoNathansWayFont = UIFont.FromName("HelveticaNeue-Light", 50.0f);
                textLogoNathansWayRect.Offset(0.0f, (textLogoNathansWayRect.Height - new NSString(textContent).StringSize(textLogoNathansWayFont, textLogoNathansWayRect.Size).Height) / 2.0f);
                new NSString(textContent).DrawString(textLogoNathansWayRect, textLogoNathansWayFont, UILineBreakMode.WordWrap, UITextAlignment.Center);
                context.RestoreState();

            }


            //// textNumberDisplay Drawing
            RectangleF textNumberDisplayRect = new RectangleF(230.0f, 22.0f, 594.0f, 128.0f);
            {
                var textContent = "1 2 3 4 5 6 7 8 9 0";
                context.SaveState();
                context.SetShadowWithColor(SkMenuBackGround.ColorTextNumbersOuterShadow.ShadowOffset, SkMenuBackGround.ColorTextNumbersOuterShadow.ShadowBlurRadius, SkMenuBackGround.ColorTextNumbersOuterShadow.ShadowColor.CGColor);
                colorTextNathansWay.SetFill();
                var textNumberDisplayFont = UIFont.FromName("Helvetica-Light", 50.0f);
                textNumberDisplayRect.Offset(0.0f, (textNumberDisplayRect.Height - new NSString(textContent).StringSize(textNumberDisplayFont, textNumberDisplayRect.Size).Height) / 2.0f);
                new NSString(textContent).DrawString(textNumberDisplayRect, textNumberDisplayFont, UILineBreakMode.WordWrap, UITextAlignment.Center);
                context.RestoreState();

            }


            //// textNumbers Drawing
            RectangleF textNumbersRect = new RectangleF(102.0f, 31.0f, 227.0f, 65.0f);
            UIColor.White.SetFill();
            new NSString("Numbers").DrawString(textNumbersRect, UIFont.FromName("Helvetica-Light", 50.0f), UILineBreakMode.WordWrap, UITextAlignment.Center);
        }

    }
}
