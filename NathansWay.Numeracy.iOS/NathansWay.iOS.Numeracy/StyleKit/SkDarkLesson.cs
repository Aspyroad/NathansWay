//
//  SkDarkLesson.cs
//  NathansWay
//
//  Created by Brett Anthony on 10/10/2014.
//  Copyright (c) 2014 AspyRoad Software. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



using System;
using System.Drawing;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using MonoTouch.CoreGraphics;

namespace NathansWay.iOS.Numeracy.StyleKit
{
    [Register ("SkDarkLesson")]
    public class SkDarkLesson : NSObject
    {

        //// Initialization

        static SkDarkLesson()
        {
        }

        //// Drawing Methods

        public static void DrawCanvas1(RectangleF frame)
        {
            //// General Declarations
            var colorSpace = CGColorSpace.CreateDeviceRGB();
            var context = UIGraphics.GetCurrentContext();

            //// Color Declarations
            var gradientColor = UIColor.FromRGBA(1.000f, 1.000f, 1.000f, 0.556f);
            var shadowColor2 = UIColor.FromRGBA(0.000f, 0.000f, 0.000f, 1.000f);
            var strokeBorder = UIColor.FromRGBA(0.574f, 0.346f, 0.093f, 0.829f);
            var gradientColor2 = UIColor.FromRGBA(0.026f, 0.026f, 0.026f, 0.702f);
            var strokeShadowColor = UIColor.FromRGBA(0.780f, 0.455f, 0.056f, 1.000f);
            var color = UIColor.FromRGBA(0.672f, 0.376f, 0.128f, 1.000f);

            //// Gradient Declarations
            var btnLessonBlackGradientColors = new CGColor [] {shadowColor2.CGColor, UIColor.FromRGBA(0.013f, 0.013f, 0.013f, 0.851f).CGColor, gradientColor2.CGColor};
            var btnLessonBlackGradientLocations = new float [] {0.0f, 0.34f, 0.65f};
            var btnLessonBlackGradient = new CGGradient(colorSpace, btnLessonBlackGradientColors, btnLessonBlackGradientLocations);

            //// Shadow Declarations
            var strokeShadow = strokeShadowColor.ColorWithAlpha(0.95f).CGColor;
            var strokeShadowOffset = new SizeF(-2.1f, -2.1f);
            var strokeShadowBlurRadius = 5.0f;
            var shadow2 = shadowColor2.CGColor;
            var shadow2Offset = new SizeF(2.1f, -3.1f);
            var shadow2BlurRadius = 5.0f;

            //// Rounded Rectangle Drawing
            var roundedRectanglePath = UIBezierPath.FromRoundedRect(new RectangleF(-0.5f, 0.5f, 448.0f, 150.0f), 24.0f);
            context.SaveState();
            roundedRectanglePath.AddClip();
            context.DrawLinearGradient(btnLessonBlackGradient,
                new PointF(231.23f, 150.5f),
                new PointF(223.5f, 0.5f),
                CGGradientDrawingOptions.DrawsBeforeStartLocation | CGGradientDrawingOptions.DrawsAfterEndLocation);
            context.RestoreState();
            strokeBorder.SetStroke();
            roundedRectanglePath.LineWidth = 1.0f;
            roundedRectanglePath.Stroke();


            //// Text Drawing
            RectangleF textRect = new RectangleF(144.0f, 41.0f, 112.0f, 64.0f);
            context.SaveState();
            context.SetShadowWithColor(shadow2Offset, shadow2BlurRadius, shadow2);
            gradientColor.SetFill();
            new NSString("Lesson").DrawString(RectangleF.Inflate(textRect, 0.0f, -7.0f), UIFont.FromName("GillSans-Light", 40.0f), UILineBreakMode.WordWrap, UITextAlignment.Center);
            context.RestoreState();



            //// Bezier 2 Drawing
            UIBezierPath bezier2Path = new UIBezierPath();
            bezier2Path.MoveTo(new PointF(122.74f, 44.78f));
            bezier2Path.AddCurveToPoint(new PointF(113.44f, 32.83f), new PointF(120.26f, 40.64f), new PointF(117.19f, 36.59f));
            bezier2Path.AddCurveToPoint(new PointF(101.38f, 23.42f), new PointF(109.65f, 29.03f), new PointF(105.56f, 25.92f));
            bezier2Path.AddLineTo(new PointF(108.73f, 16.0f));
            bezier2Path.AddCurveToPoint(new PointF(124.68f, 21.36f), new PointF(108.73f, 16.0f), new PointF(119.36f, 16.0f));
            bezier2Path.AddCurveToPoint(new PointF(130.0f, 37.45f), new PointF(130.0f, 26.73f), new PointF(130.0f, 37.45f));
            bezier2Path.AddLineTo(new PointF(122.74f, 44.78f));
            bezier2Path.ClosePath();
            bezier2Path.MoveTo(new PointF(60.86f, 107.18f));
            bezier2Path.AddLineTo(new PointF(39.59f, 107.18f));
            bezier2Path.AddLineTo(new PointF(39.59f, 85.73f));
            bezier2Path.AddLineTo(new PointF(42.14f, 83.15f));
            bezier2Path.AddCurveToPoint(new PointF(54.63f, 92.01f), new PointF(46.47f, 85.22f), new PointF(50.76f, 88.12f));
            bezier2Path.AddCurveToPoint(new PointF(63.42f, 104.61f), new PointF(58.5f, 95.92f), new PointF(61.37f, 100.25f));
            bezier2Path.AddLineTo(new PointF(60.86f, 107.18f));
            bezier2Path.ClosePath();
            bezier2Path.MoveTo(new PointF(116.6f, 50.97f));
            bezier2Path.AddLineTo(new PointF(69.55f, 98.41f));
            bezier2Path.AddCurveToPoint(new PointF(60.26f, 86.46f), new PointF(67.07f, 94.28f), new PointF(64.01f, 90.21f));
            bezier2Path.AddCurveToPoint(new PointF(48.19f, 77.05f), new PointF(56.47f, 82.65f), new PointF(52.38f, 79.55f));
            bezier2Path.AddLineTo(new PointF(95.33f, 29.52f));
            bezier2Path.AddCurveToPoint(new PointF(107.81f, 38.37f), new PointF(99.65f, 31.57f), new PointF(103.95f, 34.47f));
            bezier2Path.AddCurveToPoint(new PointF(116.6f, 50.97f), new PointF(111.69f, 42.28f), new PointF(114.56f, 46.61f));
            bezier2Path.ClosePath();
            bezier2Path.MoveTo(new PointF(28.95f, 32.09f));
            bezier2Path.AddLineTo(new PointF(28.95f, 117.91f));
            bezier2Path.AddLineTo(new PointF(114.05f, 117.91f));
            bezier2Path.AddLineTo(new PointF(114.05f, 80.36f));
            bezier2Path.AddLineTo(new PointF(130.0f, 64.07f));
            bezier2Path.AddLineTo(new PointF(130.0f, 123.27f));
            bezier2Path.AddCurveToPoint(new PointF(119.36f, 134.0f), new PointF(130.0f, 129.2f), new PointF(125.23f, 134.0f));
            bezier2Path.AddLineTo(new PointF(23.64f, 134.0f));
            bezier2Path.AddCurveToPoint(new PointF(13.0f, 123.27f), new PointF(17.77f, 134.0f), new PointF(13.0f, 129.2f));
            bezier2Path.AddLineTo(new PointF(13.0f, 26.73f));
            bezier2Path.AddCurveToPoint(new PointF(23.64f, 16.0f), new PointF(13.0f, 20.81f), new PointF(17.77f, 16.0f));
            bezier2Path.AddLineTo(new PointF(82.19f, 16.0f));
            bezier2Path.AddLineTo(new PointF(66.23f, 32.09f));
            bezier2Path.AddLineTo(new PointF(28.95f, 32.09f));
            bezier2Path.ClosePath();
            bezier2Path.MiterLimit = 4.0f;

            color.SetFill();
            bezier2Path.Fill();
            context.SaveState();
            context.SetShadowWithColor(strokeShadowOffset, strokeShadowBlurRadius, strokeShadow);
            strokeBorder.SetStroke();
            bezier2Path.LineWidth = 1.0f;
            bezier2Path.Stroke();
            context.RestoreState();
        }

    }
}
